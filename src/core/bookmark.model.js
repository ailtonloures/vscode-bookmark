import { basename } from 'node:path';

/**
 * Bookmark Model
 * @class
 */
export class Bookmark {
	/**
	 * @private
	 * @constructor
	 * @param {string} path
	 */
	constructor(path) {
		/**
		 * The original path
		 * @type {string}
		 */
		this.path = path;
		/**
		 * Id generated by timestamp
		 * @type {number}
		 */
		this.id = this._getId();
		/**
		 * The basename of the path
		 * @type {string}
		 */
		this.basename = this._getBaseName();
		/**
		 * The WSL remote path
		 * @type {string}
		 */
		this.remotePath = this._getRemotePath();
	}

	/**
	 * Create a Bookmark instance
	 *
	 * @static
	 * @param {string} path
	 * @returns {Bookmark}
	 */
	static create(path) {
		return new Bookmark(path);
	}

	/**
	 * @private
	 * @returns {string | null}
	 */
	_getRemotePath() {
		const isWslPath = this.path.startsWith('\\\\wsl');

		if (isWslPath) {
			const getWslPath = () => {
				const sanitizedPath = this.path
					.replaceAll('\\', '/')
					.replace('.localhost/', '+');

				return `vscode-remote:${sanitizedPath}`;
			};

			return getWslPath();
		}

		return null;
	}

	/**
	 * @private
	 * @returns {string}
	 */
	_getBaseName() {
		return basename(this.path);
	}

	/**
	 * @private
	 * @returns {number}
	 */
	_getId() {
		return new Date().getTime();
	}
}
